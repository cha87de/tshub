// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// HostDetails host details
// swagger:model HostDetails
type HostDetails struct {

	// name
	Name string `json:"name,omitempty"`

	// overbooking
	Overbooking *HostDetailsOverbooking `json:"overbooking,omitempty"`
}

// Validate validates this host details
func (m *HostDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOverbooking(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HostDetails) validateOverbooking(formats strfmt.Registry) error {

	if swag.IsZero(m.Overbooking) { // not required
		return nil
	}

	if m.Overbooking != nil {
		if err := m.Overbooking.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("overbooking")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *HostDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HostDetails) UnmarshalBinary(b []byte) error {
	var res HostDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// HostDetailsOverbooking host details overbooking
// swagger:model HostDetailsOverbooking
type HostDetailsOverbooking struct {

	// cpu cores
	CPUCores int64 `json:"cpuCores,omitempty"`

	// cpu util
	CPUUtil int64 `json:"cpuUtil,omitempty"`

	// disk i o
	DiskIO int64 `json:"diskIO,omitempty"`

	// net i o
	NetIO int64 `json:"netIO,omitempty"`

	// ram
	RAM int64 `json:"ram,omitempty"`
}

// Validate validates this host details overbooking
func (m *HostDetailsOverbooking) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HostDetailsOverbooking) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HostDetailsOverbooking) UnmarshalBinary(b []byte) error {
	var res HostDetailsOverbooking
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
